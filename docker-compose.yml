# Docker Compose pour LogoDouman - Version corrigée complète
services:
  # PostgreSQL - Base de données
  postgres:
    image: postgres:16-alpine
    container_name: logodouman-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: logodouman
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: logodouman123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    networks:
      - logodouman-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d logodouman"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis - Cache
  redis:
    image: redis:7-alpine
    container_name: logodouman-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - logodouman-network
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "redis123", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend - API Node.js
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: logodouman-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:logodouman123@postgres:5432/logodouman
      - REDIS_URL=redis://:redis123@redis:6379
      - JWT_SECRET=logodouman-super-secret-jwt-key-docker-2024
      - CORS_ORIGIN=http://localhost:3000,http://frontend:3000
      - PORT=4002
    ports:
      - "4002:4002"
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - logodouman-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  # Frontend - Next.js
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: logodouman-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:4002
      - NEXT_PUBLIC_SITE_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - logodouman-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Adminer - Interface DB
  adminer:
    image: adminer:4.8.1
    container_name: logodouman-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - logodouman-network

volumes:
  postgres_data:
  redis_data:
  backend_uploads:
  backend_logs:

networks:
  logodouman-network:
    driver: bridge
