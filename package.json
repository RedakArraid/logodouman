{
  "name": "logodouman",
  "version": "2.1.0",
  "description": "Plateforme e-commerce moderne et scalable - LogoDouman (Docker Ready)",
  "private": true,
  "scripts": {
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install",
    
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    
    "docker:build": "docker-compose build --no-cache",
    "docker:setup": "chmod +x start-complete.sh && ./start-complete.sh",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:restart": "docker-compose restart",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:backend": "docker-compose logs -f backend",
    "docker:logs:frontend": "docker-compose logs -f frontend",
    "docker:logs:postgres": "docker-compose logs -f postgres",
    "docker:logs:redis": "docker-compose logs -f redis",
    
    "docker:clean": "docker-compose down -v --rmi all --remove-orphans",
    "docker:reset": "npm run docker:clean && docker system prune -f && npm run docker:build && npm run docker:up",
    "docker:force-recreate": "docker-compose up -d --force-recreate",
    
    "docker:exec:backend": "docker-compose exec backend sh",
    "docker:exec:frontend": "docker-compose exec frontend sh",
    "docker:exec:postgres": "docker-compose exec postgres psql -U postgres -d logodouman",
    
    "docker:health": "docker-compose ps",
    "docker:migrate": "docker-compose exec backend node scripts/migrate.js",
    "docker:debug": "docker-compose logs --tail=50 && docker-compose ps",
    
    "setup:docker": "npm run docker:build && npm run docker:up && npm run docker:wait && npm run docker:migrate",
    "docker:wait": "echo 'Attente des services...' && sleep 60",
    "setup:dev": "npm run install:all",
    
    "fix:docker": "npm run docker:down && docker system prune -f && docker network prune -f && npm run docker:up",
    
    "build": "npm run build:backend && npm run build:frontend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    
    "start": "docker-compose up -d",
    "stop": "docker-compose down",
    
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && npm test",
    
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    
    "db:migrate": "docker-compose exec backend node scripts/migrate.js",
    "db:reset": "docker-compose exec backend npx prisma db push --force-reset && npm run db:migrate",
    "db:studio": "cd backend && npx prisma studio",
    "db:backup": "docker-compose exec postgres pg_dump -U postgres logodouman > backup_$(date +%Y%m%d_%H%M%S).sql",
    
    "clean": "rm -rf frontend/.next frontend/node_modules backend/node_modules node_modules",
    "fresh-install": "npm run clean && npm run install:all",
    
    "type-check": "cd frontend && npm run type-check",
    "format": "cd frontend && npx prettier --write . && cd ../backend && npx prettier --write .",
    
    "monitor": "docker stats logodouman-frontend logodouman-backend logodouman-postgres logodouman-redis",
    "backup:volumes": "docker run --rm -v logodouman_postgres_data:/data -v $(pwd):/backup alpine tar czf /backup/postgres_backup_$(date +%Y%m%d_%H%M%S).tar.gz -C /data ."
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "dependencies": {
    "@heroicons/react": "^2.2.0"
  },
  "keywords": [
    "ecommerce",
    "nextjs",
    "nodejs",
    "postgresql",
    "prisma",
    "typescript",
    "docker",
    "docker-compose",
    "tailwindcss",
    "sacs",
    "logodouman",
    "cote-divoire"
  ],
  "author": {
    "name": "LogoDouman Team",
    "email": "dev@logodouman.com",
    "url": "https://logodouman.com"
  },
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "docker": ">=20.0.0",
    "docker-compose": ">=2.0.0"
  }
}
