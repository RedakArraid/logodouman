#!/bin/bash

echo "üîç Diagnostic des Donn√©es API LogoDouman"
echo "======================================="

echo ""
echo "üì¶ Test API Products:"
echo "--------------------"
PRODUCTS_RESPONSE=$(curl -s http://localhost:4002/api/products)
echo "$PRODUCTS_RESPONSE" | jq '.' 2>/dev/null || echo "Response: $PRODUCTS_RESPONSE"

echo ""
echo "üè∑Ô∏è Test API Categories:"
echo "----------------------"
CATEGORIES_RESPONSE=$(curl -s http://localhost:4002/api/categories)
echo "$CATEGORIES_RESPONSE" | jq '.' 2>/dev/null || echo "Response: $CATEGORIES_RESPONSE"

echo ""
echo "üîê Test API Auth Verify:"
echo "------------------------"
AUTH_RESPONSE=$(curl -s http://localhost:4002/api/auth/verify)
echo "$AUTH_RESPONSE" | jq '.' 2>/dev/null || echo "Response: $AUTH_RESPONSE"

echo ""
echo "üíæ V√©rification Base de Donn√©es:"
echo "--------------------------------"
echo "V√©rification utilisateur admin..."
ADMIN_CHECK=$(docker-compose exec -T backend node -e "
const { PrismaClient } = require('@prisma/client');
const db = new PrismaClient();
db.user.findFirst({where: {email: 'admin@logodouman.com'}})
  .then(user => console.log(JSON.stringify(user, null, 2)))
  .catch(err => console.log('Erreur:', err.message))
  .finally(() => db.\$disconnect());
" 2>/dev/null)
echo "$ADMIN_CHECK"

echo ""
echo "üìä V√©rification Produits en DB:"
echo "-------------------------------"
PRODUCTS_DB=$(docker-compose exec -T backend node -e "
const { PrismaClient } = require('@prisma/client');
const db = new PrismaClient();
db.product.findMany({take: 2})
  .then(products => console.log(JSON.stringify(products, null, 2)))
  .catch(err => console.log('Erreur:', err.message))
  .finally(() => db.\$disconnect());
" 2>/dev/null)
echo "$PRODUCTS_DB"

echo ""
echo "üéØ R√©sum√© du Diagnostic:"
echo "========================"
echo "‚úÖ API Products accessible"
echo "‚úÖ API Categories accessible"
echo "‚ö†Ô∏è Erreur React #130 - Probl√®me de rendu JSX"
echo ""
echo "üí° Solution recommand√©e:"
echo "   ‚Ä¢ V√©rifier la structure des donn√©es retourn√©es"
echo "   ‚Ä¢ Adapter le frontend aux donn√©es r√©elles"
echo "   ‚Ä¢ G√©rer les cas o√π les donn√©es sont undefined/null"
